import pytest
from hw_1 import salary_stats

test_salaries = (
    (
        None,
        {
            'Отдел1': {'Сотрудник1': 1000, 'Сотрудник2': 2000, 'Сотрудник3': 3000},
            'Отдел2': {'Сотрудник4': 4000, 'Сотрудник5': 5000, 'Сотрудник6': 6000},
            'Отдел3': {'Сотрудник7': 7000, 'Сотрудник8': 8000, 'Сотрудник9': 9000}
        },
        ([1000, 2000, 3000], '13.33%')
    ),
    (
        7000,
        {
            'Отдел1': {'Сотрудник1': 1000, 'Сотрудник2': 2000, 'Сотрудник3': 3000},
            'Отдел2': {'Сотрудник4': 4000, 'Сотрудник5': 5000, 'Сотрудник6': 6000},
            'Отдел3': {'Сотрудник7': 7000, 'Сотрудник8': 8000, 'Сотрудник9': 9000}
        },
        ([1000, 2000, 3000], '21.43%')
    ),
    (
        None,
        {
            'Отдел1': {'Сотрудник1': 6500, 'Сотрудник2': 4110, 'Сотрудник3': 3500},
            'Отдел2': {'Сотрудник4': 54000, 'Сотрудник5': 30000, 'Сотрудник6': 76000},
            'Отдел3': {'Сотрудник7': 107000, 'Сотрудник8': 8500, 'Сотрудник9': 92000}
        },
        ([3500, 4110, 6500], '3.7%')
    ),
    (
        80000,
        {
            'Отдел1': {'Сотрудник1': 65000, 'Сотрудник2': 4110, 'Сотрудник3': 35000},
            'Отдел2': {'Сотрудник4': 54000, 'Сотрудник5': 30000, 'Сотрудник6': 76000},
            'Отдел3': {'Сотрудник7': 107000, 'Сотрудник8': 8500, 'Сотрудник9': 92000}
        },
        ([4110, 8500, 30000], '15.63%')
    ),
    (
        1,
        {
            'Отдел1': {'Сотрудник1': 1000},
            'Отдел2': {'Сотрудник4': 4000},
        },
        ([], '100%')
    ),
)


@pytest.mark.parametrize("limit, salaries, expected", test_salaries)
def test_salary_stats(limit: int | None, salaries: dict, expected: tuple[str]):
    assert tuple(salary_stats(limit, **salaries)) == expected
